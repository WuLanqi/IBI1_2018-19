-----Week 4-----

— Feedback: Be a bit more precise about what the mystery code does. It returns just one number, so how does it "find prime numbers" between 1 and 100?

# Response: Add more precise pseudocode and followings are examples:

Math reasoning: If n has a factor bigger than [square root of n], there should be a factor smaller than that. Therefore, if a factor cannot be found smaller than [square root of n], n should be a prime number.

Loop reasoning: If we can find factors of n between 2 and u+1, choose another n. If the n has no factor between 2 and u+1, then n is a prime number.

-----Week 5-----

— Feedback: The code for counting nucleotides and displaying counts in a pie chart works well, but you should ask users to input a nucleotide sequence instead of hard-coding it in the programme.

# Response: Input function is used to replace hard-coding. The code is like this: s = input (‘Give me a DNA string: ’)


— Feedback: The code for string reverse and sort works fine, but again, ask the user to input a string, instead of hard-coding it.

# Response: Input function is used to replace hard-coding. The code is like this: s = input (‘Give me a string of words: ’)
